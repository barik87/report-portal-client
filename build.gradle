plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

group 'io.github.barvin'
version releaseVersion

apply plugin: 'java-library'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "mbarvinskyi"
            name "Maksym Barvinskyi"
            email "maksym@mbarvinskyi.com"
        }
    }

    scm {
        url "https://github.com/barvin/report-portal-client"
    }
}

publishing {
    publications {
        RpClientPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                archiveClassifier.set("sources")
            }
            artifact javadocJar {
                archiveClassifier.set("javadoc")
            }
            groupId group
            artifactId project.name
            version releaseVersion
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Report Portal client')
                root.appendNode('name', rootProject.name)
                root.appendNode('url', 'https://github.com/barvin/report-portal-client')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('user') ? project.property('user') : ''
    key = project.hasProperty('key') ? project.property('key') : ''
    publications = ['RpClientPublication']
    publish = true
    override = true
    pkg {
        repo = 'qatools'
        name = project.name
        websiteUrl = 'https://github.com/barvin/report-portal-client'
        issueTrackerUrl = 'https://github.com/barvin/report-portal-client/issues'
        version {
            name = releaseVersion
            desc = 'Report Portal client '.concat(releaseVersion)
            released  = new Date()
            licenses = ['Apache-2.0']
            vcsTag = 'v'.concat(releaseVersion)
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                user = project.hasProperty('sonatype.token') ? project.property('sonatype.token') : ''
                password = project.hasProperty('sonatype.password') ? project.property('sonatype.password') : ''
                close = '1'
            }
        }
    }
}

dependencies {
    implementation 'io.swagger:swagger-annotations:1.5.0'
    implementation 'io.github.openfeign:feign-core:9.5.1'
    implementation 'io.github.openfeign:feign-jackson:9.5.1'
    implementation 'io.github.openfeign:feign-okhttp:9.5.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.3'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.google.guava:guava:23.0'
    implementation 'org.apache.tika:tika-core:1.18'
    testCompile 'org.testng:testng:6.11'
    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.13'
}

test {
    useTestNG()
    include '**/*.class'
}
