/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 4.3.11
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.qatools.rp.dto.generated;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Statistics
 */

public class Statistics {
  @JsonProperty("defects")
  private IssueCounter defects = null;

  @JsonProperty("executions")
  private ExecutionCounter executions = null;

  public Statistics defects(IssueCounter defects) {
    this.defects = defects;
    return this;
  }

   /**
   * Get defects
   * @return defects
  **/
  @ApiModelProperty(value = "")
  public IssueCounter getDefects() {
    return defects;
  }

  public void setDefects(IssueCounter defects) {
    this.defects = defects;
  }

  public Statistics executions(ExecutionCounter executions) {
    this.executions = executions;
    return this;
  }

   /**
   * Get executions
   * @return executions
  **/
  @ApiModelProperty(value = "")
  public ExecutionCounter getExecutions() {
    return executions;
  }

  public void setExecutions(ExecutionCounter executions) {
    this.executions = executions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Statistics statistics = (Statistics) o;
    return Objects.equals(this.defects, statistics.defects) &&
        Objects.equals(this.executions, statistics.executions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defects, executions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Statistics {\n");

    sb.append("    defects: ").append(toIndentedString(defects)).append("\n");
    sb.append("    executions: ").append(toIndentedString(executions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

