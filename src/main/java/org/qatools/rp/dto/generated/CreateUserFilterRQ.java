/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 4.3.11
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.qatools.rp.dto.generated;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CreateUserFilterRQ
 */

public class CreateUserFilterRQ {
  @JsonProperty("description")
  private String description = null;

  @JsonProperty("entities")
  private List<UserFilterEntity> entities = new ArrayList<>();

  @JsonProperty("is_link")
  private Boolean isLink = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("selection_parameters")
  private SelectionParameters selectionParameters = null;

  @JsonProperty("share")
  private Boolean share = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    LAUNCH("launch"),
    
    TESTITEM("testitem"),
    
    LOG("log");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  public CreateUserFilterRQ description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateUserFilterRQ entities(List<UserFilterEntity> entities) {
    this.entities = entities;
    return this;
  }

  public CreateUserFilterRQ addEntitiesItem(UserFilterEntity entitiesItem) {
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Get entities
   * @return entities
  **/
  @ApiModelProperty(required = true, value = "")
  public List<UserFilterEntity> getEntities() {
    return entities;
  }

  public void setEntities(List<UserFilterEntity> entities) {
    this.entities = entities;
  }

  public CreateUserFilterRQ isLink(Boolean isLink) {
    this.isLink = isLink;
    return this;
  }

   /**
   * Get isLink
   * @return isLink
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsLink() {
    return isLink;
  }

  public void setIsLink(Boolean isLink) {
    this.isLink = isLink;
  }

  public CreateUserFilterRQ name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateUserFilterRQ selectionParameters(SelectionParameters selectionParameters) {
    this.selectionParameters = selectionParameters;
    return this;
  }

   /**
   * Get selectionParameters
   * @return selectionParameters
  **/
  @ApiModelProperty(required = true, value = "")
  public SelectionParameters getSelectionParameters() {
    return selectionParameters;
  }

  public void setSelectionParameters(SelectionParameters selectionParameters) {
    this.selectionParameters = selectionParameters;
  }

  public CreateUserFilterRQ share(Boolean share) {
    this.share = share;
    return this;
  }

   /**
   * Get share
   * @return share
  **/
  @ApiModelProperty(value = "")
  public Boolean isShare() {
    return share;
  }

  public void setShare(Boolean share) {
    this.share = share;
  }

  public CreateUserFilterRQ type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateUserFilterRQ createUserFilterRQ = (CreateUserFilterRQ) o;
    return Objects.equals(this.description, createUserFilterRQ.description) &&
        Objects.equals(this.entities, createUserFilterRQ.entities) &&
        Objects.equals(this.isLink, createUserFilterRQ.isLink) &&
        Objects.equals(this.name, createUserFilterRQ.name) &&
        Objects.equals(this.selectionParameters, createUserFilterRQ.selectionParameters) &&
        Objects.equals(this.share, createUserFilterRQ.share) &&
        Objects.equals(this.type, createUserFilterRQ.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, entities, isLink, name, selectionParameters, share, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateUserFilterRQ {\n");

    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    isLink: ").append(toIndentedString(isLink)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    selectionParameters: ").append(toIndentedString(selectionParameters)).append("\n");
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

