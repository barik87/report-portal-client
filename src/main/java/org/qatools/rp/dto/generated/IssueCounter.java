/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 4.3.11
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.qatools.rp.dto.generated;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * IssueCounter
 */

public class IssueCounter {
  @JsonProperty("automation_bug")
  private Map<String, Integer> automationBug = null;

  @JsonProperty("no_defect")
  private Map<String, Integer> noDefect = null;

  @JsonProperty("product_bug")
  private Map<String, Integer> productBug = null;

  @JsonProperty("system_issue")
  private Map<String, Integer> systemIssue = null;

  @JsonProperty("to_investigate")
  private Map<String, Integer> toInvestigate = null;

  public IssueCounter automationBug(Map<String, Integer> automationBug) {
    this.automationBug = automationBug;
    return this;
  }

  public IssueCounter putAutomationBugItem(String key, Integer automationBugItem) {
    if (this.automationBug == null) {
      this.automationBug = new HashMap<>();
    }
    this.automationBug.put(key, automationBugItem);
    return this;
  }

   /**
   * Get automationBug
   * @return automationBug
  **/
  @ApiModelProperty(value = "")
  public Map<String, Integer> getAutomationBug() {
    return automationBug;
  }

  public void setAutomationBug(Map<String, Integer> automationBug) {
    this.automationBug = automationBug;
  }

  public IssueCounter noDefect(Map<String, Integer> noDefect) {
    this.noDefect = noDefect;
    return this;
  }

  public IssueCounter putNoDefectItem(String key, Integer noDefectItem) {
    if (this.noDefect == null) {
      this.noDefect = new HashMap<>();
    }
    this.noDefect.put(key, noDefectItem);
    return this;
  }

   /**
   * Get noDefect
   * @return noDefect
  **/
  @ApiModelProperty(value = "")
  public Map<String, Integer> getNoDefect() {
    return noDefect;
  }

  public void setNoDefect(Map<String, Integer> noDefect) {
    this.noDefect = noDefect;
  }

  public IssueCounter productBug(Map<String, Integer> productBug) {
    this.productBug = productBug;
    return this;
  }

  public IssueCounter putProductBugItem(String key, Integer productBugItem) {
    if (this.productBug == null) {
      this.productBug = new HashMap<>();
    }
    this.productBug.put(key, productBugItem);
    return this;
  }

   /**
   * Get productBug
   * @return productBug
  **/
  @ApiModelProperty(value = "")
  public Map<String, Integer> getProductBug() {
    return productBug;
  }

  public void setProductBug(Map<String, Integer> productBug) {
    this.productBug = productBug;
  }

  public IssueCounter systemIssue(Map<String, Integer> systemIssue) {
    this.systemIssue = systemIssue;
    return this;
  }

  public IssueCounter putSystemIssueItem(String key, Integer systemIssueItem) {
    if (this.systemIssue == null) {
      this.systemIssue = new HashMap<>();
    }
    this.systemIssue.put(key, systemIssueItem);
    return this;
  }

   /**
   * Get systemIssue
   * @return systemIssue
  **/
  @ApiModelProperty(value = "")
  public Map<String, Integer> getSystemIssue() {
    return systemIssue;
  }

  public void setSystemIssue(Map<String, Integer> systemIssue) {
    this.systemIssue = systemIssue;
  }

  public IssueCounter toInvestigate(Map<String, Integer> toInvestigate) {
    this.toInvestigate = toInvestigate;
    return this;
  }

  public IssueCounter putToInvestigateItem(String key, Integer toInvestigateItem) {
    if (this.toInvestigate == null) {
      this.toInvestigate = new HashMap<>();
    }
    this.toInvestigate.put(key, toInvestigateItem);
    return this;
  }

   /**
   * Get toInvestigate
   * @return toInvestigate
  **/
  @ApiModelProperty(value = "")
  public Map<String, Integer> getToInvestigate() {
    return toInvestigate;
  }

  public void setToInvestigate(Map<String, Integer> toInvestigate) {
    this.toInvestigate = toInvestigate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueCounter issueCounter = (IssueCounter) o;
    return Objects.equals(this.automationBug, issueCounter.automationBug) &&
        Objects.equals(this.noDefect, issueCounter.noDefect) &&
        Objects.equals(this.productBug, issueCounter.productBug) &&
        Objects.equals(this.systemIssue, issueCounter.systemIssue) &&
        Objects.equals(this.toInvestigate, issueCounter.toInvestigate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automationBug, noDefect, productBug, systemIssue, toInvestigate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueCounter {\n");

    sb.append("    automationBug: ").append(toIndentedString(automationBug)).append("\n");
    sb.append("    noDefect: ").append(toIndentedString(noDefect)).append("\n");
    sb.append("    productBug: ").append(toIndentedString(productBug)).append("\n");
    sb.append("    systemIssue: ").append(toIndentedString(systemIssue)).append("\n");
    sb.append("    toInvestigate: ").append(toIndentedString(toInvestigate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

