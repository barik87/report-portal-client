/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 4.3.11
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.qatools.rp.dto.generated;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PostFormField
 */

public class PostFormField {
  @JsonProperty("definedValues")
  private List<AllowedValue> definedValues = null;

  @JsonProperty("fieldName")
  private String fieldName = null;

  @JsonProperty("fieldType")
  private String fieldType = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("required")
  private Boolean required = null;

  @JsonProperty("value")
  private List<String> value = new ArrayList<>();

  public PostFormField definedValues(List<AllowedValue> definedValues) {
    this.definedValues = definedValues;
    return this;
  }

  public PostFormField addDefinedValuesItem(AllowedValue definedValuesItem) {
    if (this.definedValues == null) {
      this.definedValues = new ArrayList<>();
    }
    this.definedValues.add(definedValuesItem);
    return this;
  }

   /**
   * Get definedValues
   * @return definedValues
  **/
  @ApiModelProperty(value = "")
  public List<AllowedValue> getDefinedValues() {
    return definedValues;
  }

  public void setDefinedValues(List<AllowedValue> definedValues) {
    this.definedValues = definedValues;
  }

  public PostFormField fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Get fieldName
   * @return fieldName
  **/
  @ApiModelProperty(value = "")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public PostFormField fieldType(String fieldType) {
    this.fieldType = fieldType;
    return this;
  }

   /**
   * Get fieldType
   * @return fieldType
  **/
  @ApiModelProperty(value = "")
  public String getFieldType() {
    return fieldType;
  }

  public void setFieldType(String fieldType) {
    this.fieldType = fieldType;
  }

  public PostFormField id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PostFormField required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public PostFormField value(List<String> value) {
    this.value = value;
    return this;
  }

  public PostFormField addValueItem(String valueItem) {
    this.value.add(valueItem);
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getValue() {
    return value;
  }

  public void setValue(List<String> value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostFormField postFormField = (PostFormField) o;
    return Objects.equals(this.definedValues, postFormField.definedValues) &&
        Objects.equals(this.fieldName, postFormField.fieldName) &&
        Objects.equals(this.fieldType, postFormField.fieldType) &&
        Objects.equals(this.id, postFormField.id) &&
        Objects.equals(this.required, postFormField.required) &&
        Objects.equals(this.value, postFormField.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(definedValues, fieldName, fieldType, id, required, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostFormField {\n");

    sb.append("    definedValues: ").append(toIndentedString(definedValues)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    fieldType: ").append(toIndentedString(fieldType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

