/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 4.3.11
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.qatools.rp.dto.generated;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * StartTestItemRQ
 */

public class StartTestItemRQ {
  @JsonProperty("description")
  private String description = null;

  @JsonProperty("launch_id")
  private String launchId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("parameters")
  private List<ParameterResource> parameters = null;

  @JsonProperty("retry")
  private Boolean retry = null;

  @JsonProperty("start_time")
  private Date startTime = null;

  @JsonProperty("tags")
  private List<String> tags = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    SUITE("SUITE"),
    
    STORY("STORY"),
    
    TEST("TEST"),
    
    SCENARIO("SCENARIO"),
    
    STEP("STEP"),
    
    BEFORE_CLASS("BEFORE_CLASS"),
    
    BEFORE_GROUPS("BEFORE_GROUPS"),
    
    BEFORE_METHOD("BEFORE_METHOD"),
    
    BEFORE_SUITE("BEFORE_SUITE"),
    
    BEFORE_TEST("BEFORE_TEST"),
    
    AFTER_CLASS("AFTER_CLASS"),
    
    AFTER_GROUPS("AFTER_GROUPS"),
    
    AFTER_METHOD("AFTER_METHOD"),
    
    AFTER_SUITE("AFTER_SUITE"),
    
    AFTER_TEST("AFTER_TEST");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("uniqueId")
  private String uniqueId = null;

  public StartTestItemRQ description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public StartTestItemRQ launchId(String launchId) {
    this.launchId = launchId;
    return this;
  }

   /**
   * Get launchId
   * @return launchId
  **/
  public String getLaunchId() {
    return launchId;
  }

  public void setLaunchId(String launchId) {
    this.launchId = launchId;
  }

  public StartTestItemRQ name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public StartTestItemRQ parameters(List<ParameterResource> parameters) {
    this.parameters = parameters;
    return this;
  }

  public StartTestItemRQ addParametersItem(ParameterResource parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  public List<ParameterResource> getParameters() {
    return parameters;
  }

  public void setParameters(List<ParameterResource> parameters) {
    this.parameters = parameters;
  }

  public StartTestItemRQ retry(Boolean retry) {
    this.retry = retry;
    return this;
  }

   /**
   * Get retry
   * @return retry
  **/
  public Boolean isRetry() {
    return retry;
  }

  public void setRetry(Boolean retry) {
    this.retry = retry;
  }

  public StartTestItemRQ startTime(Date startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  public Date getStartTime() {
    return startTime;
  }

  public void setStartTime(Date startTime) {
    this.startTime = startTime;
  }

  public StartTestItemRQ tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public StartTestItemRQ addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public StartTestItemRQ type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public StartTestItemRQ uniqueId(String uniqueId) {
    this.uniqueId = uniqueId;
    return this;
  }

   /**
   * Get uniqueId
   * @return uniqueId
  **/
  public String getUniqueId() {
    return uniqueId;
  }

  public void setUniqueId(String uniqueId) {
    this.uniqueId = uniqueId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartTestItemRQ startTestItemRQ = (StartTestItemRQ) o;
    return Objects.equals(this.description, startTestItemRQ.description) &&
        Objects.equals(this.launchId, startTestItemRQ.launchId) &&
        Objects.equals(this.name, startTestItemRQ.name) &&
        Objects.equals(this.parameters, startTestItemRQ.parameters) &&
        Objects.equals(this.retry, startTestItemRQ.retry) &&
        Objects.equals(this.startTime, startTestItemRQ.startTime) &&
        Objects.equals(this.tags, startTestItemRQ.tags) &&
        Objects.equals(this.type, startTestItemRQ.type) &&
        Objects.equals(this.uniqueId, startTestItemRQ.uniqueId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, launchId, name, parameters, retry, startTime, tags, type, uniqueId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartTestItemRQ {\n");

    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    launchId: ").append(toIndentedString(launchId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    retry: ").append(toIndentedString(retry)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uniqueId: ").append(toIndentedString(uniqueId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

