/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 4.3.11
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.qatools.rp.dto.generated;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;

/**
 * ProjectConfiguration
 */

public class ProjectConfiguration {
  @JsonProperty("analyzerConfiguration")
  private AnalyzerConfig analyzerConfiguration = null;

  @JsonProperty("emailConfiguration")
  private ProjectEmailConfigDTO emailConfiguration = null;

  @JsonProperty("entryType")
  private String entryType = null;

  @JsonProperty("externalSystem")
  private List<ExternalSystemResource> externalSystem = null;

  /**
   * Gets or Sets interruptedJob
   */
  public enum InterruptedJobEnum {
    ONE_HOUR("ONE_HOUR"),
    
    THREE_HOURS("THREE_HOURS"),
    
    SIX_HOURS("SIX_HOURS"),
    
    TWELVE_HOURS("TWELVE_HOURS"),
    
    ONE_DAY("ONE_DAY"),
    
    ONE_WEEK("ONE_WEEK");

    private String value;

    InterruptedJobEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterruptedJobEnum fromValue(String text) {
      for (InterruptedJobEnum b : InterruptedJobEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("interruptedJob")
  private InterruptedJobEnum interruptedJob = null;

  /**
   * Gets or Sets keepLogs
   */
  public enum KeepLogsEnum {
    TWO_WEEKS("TWO_WEEKS"),
    
    ONE_MONTH("ONE_MONTH"),
    
    THREE_MONTHS("THREE_MONTHS"),
    
    SIX_MONTHS("SIX_MONTHS");

    private String value;

    KeepLogsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static KeepLogsEnum fromValue(String text) {
      for (KeepLogsEnum b : KeepLogsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("keepLogs")
  private KeepLogsEnum keepLogs = null;

  /**
   * Gets or Sets keepScreenshots
   */
  public enum KeepScreenshotsEnum {
    ONE_WEEK("ONE_WEEK"),
    
    TWO_WEEKS("TWO_WEEKS"),
    
    THREE_WEEKS("THREE_WEEKS"),
    
    ONE_MONTH("ONE_MONTH"),
    
    THREE_MONTHS("THREE_MONTHS");

    private String value;

    KeepScreenshotsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static KeepScreenshotsEnum fromValue(String text) {
      for (KeepScreenshotsEnum b : KeepScreenshotsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("keepScreenshots")
  private KeepScreenshotsEnum keepScreenshots = null;

  @JsonProperty("projectSpecific")
  private String projectSpecific = null;

  /**
   * Gets or Sets statisticCalculationStrategy
   */
  public enum StatisticCalculationStrategyEnum {
    STEP_BASED("STEP_BASED"),
    
    TEST_BASED("TEST_BASED");

    private String value;

    StatisticCalculationStrategyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatisticCalculationStrategyEnum fromValue(String text) {
      for (StatisticCalculationStrategyEnum b : StatisticCalculationStrategyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("statisticCalculationStrategy")
  private StatisticCalculationStrategyEnum statisticCalculationStrategy = null;

  @JsonProperty("subTypes")
  private Map<String, List<IssueSubTypeResource>> subTypes = null;

  public ProjectConfiguration analyzerConfiguration(AnalyzerConfig analyzerConfiguration) {
    this.analyzerConfiguration = analyzerConfiguration;
    return this;
  }

   /**
   * Get analyzerConfiguration
   * @return analyzerConfiguration
  **/
  @ApiModelProperty(value = "")
  public AnalyzerConfig getAnalyzerConfiguration() {
    return analyzerConfiguration;
  }

  public void setAnalyzerConfiguration(AnalyzerConfig analyzerConfiguration) {
    this.analyzerConfiguration = analyzerConfiguration;
  }

  public ProjectConfiguration emailConfiguration(ProjectEmailConfigDTO emailConfiguration) {
    this.emailConfiguration = emailConfiguration;
    return this;
  }

   /**
   * Get emailConfiguration
   * @return emailConfiguration
  **/
  @ApiModelProperty(value = "")
  public ProjectEmailConfigDTO getEmailConfiguration() {
    return emailConfiguration;
  }

  public void setEmailConfiguration(ProjectEmailConfigDTO emailConfiguration) {
    this.emailConfiguration = emailConfiguration;
  }

  public ProjectConfiguration entryType(String entryType) {
    this.entryType = entryType;
    return this;
  }

   /**
   * Get entryType
   * @return entryType
  **/
  @ApiModelProperty(value = "")
  public String getEntryType() {
    return entryType;
  }

  public void setEntryType(String entryType) {
    this.entryType = entryType;
  }

  public ProjectConfiguration externalSystem(List<ExternalSystemResource> externalSystem) {
    this.externalSystem = externalSystem;
    return this;
  }

  public ProjectConfiguration addExternalSystemItem(ExternalSystemResource externalSystemItem) {
    if (this.externalSystem == null) {
      this.externalSystem = new ArrayList<>();
    }
    this.externalSystem.add(externalSystemItem);
    return this;
  }

   /**
   * Get externalSystem
   * @return externalSystem
  **/
  @ApiModelProperty(value = "")
  public List<ExternalSystemResource> getExternalSystem() {
    return externalSystem;
  }

  public void setExternalSystem(List<ExternalSystemResource> externalSystem) {
    this.externalSystem = externalSystem;
  }

  public ProjectConfiguration interruptedJob(InterruptedJobEnum interruptedJob) {
    this.interruptedJob = interruptedJob;
    return this;
  }

   /**
   * Get interruptedJob
   * @return interruptedJob
  **/
  @ApiModelProperty(value = "")
  public InterruptedJobEnum getInterruptedJob() {
    return interruptedJob;
  }

  public void setInterruptedJob(InterruptedJobEnum interruptedJob) {
    this.interruptedJob = interruptedJob;
  }

  public ProjectConfiguration keepLogs(KeepLogsEnum keepLogs) {
    this.keepLogs = keepLogs;
    return this;
  }

   /**
   * Get keepLogs
   * @return keepLogs
  **/
  @ApiModelProperty(value = "")
  public KeepLogsEnum getKeepLogs() {
    return keepLogs;
  }

  public void setKeepLogs(KeepLogsEnum keepLogs) {
    this.keepLogs = keepLogs;
  }

  public ProjectConfiguration keepScreenshots(KeepScreenshotsEnum keepScreenshots) {
    this.keepScreenshots = keepScreenshots;
    return this;
  }

   /**
   * Get keepScreenshots
   * @return keepScreenshots
  **/
  @ApiModelProperty(value = "")
  public KeepScreenshotsEnum getKeepScreenshots() {
    return keepScreenshots;
  }

  public void setKeepScreenshots(KeepScreenshotsEnum keepScreenshots) {
    this.keepScreenshots = keepScreenshots;
  }

  public ProjectConfiguration projectSpecific(String projectSpecific) {
    this.projectSpecific = projectSpecific;
    return this;
  }

   /**
   * Get projectSpecific
   * @return projectSpecific
  **/
  @ApiModelProperty(value = "")
  public String getProjectSpecific() {
    return projectSpecific;
  }

  public void setProjectSpecific(String projectSpecific) {
    this.projectSpecific = projectSpecific;
  }

  public ProjectConfiguration statisticCalculationStrategy(StatisticCalculationStrategyEnum statisticCalculationStrategy) {
    this.statisticCalculationStrategy = statisticCalculationStrategy;
    return this;
  }

   /**
   * Get statisticCalculationStrategy
   * @return statisticCalculationStrategy
  **/
  @ApiModelProperty(value = "")
  public StatisticCalculationStrategyEnum getStatisticCalculationStrategy() {
    return statisticCalculationStrategy;
  }

  public void setStatisticCalculationStrategy(StatisticCalculationStrategyEnum statisticCalculationStrategy) {
    this.statisticCalculationStrategy = statisticCalculationStrategy;
  }

  public ProjectConfiguration subTypes(Map<String, List<IssueSubTypeResource>> subTypes) {
    this.subTypes = subTypes;
    return this;
  }

  public ProjectConfiguration putSubTypesItem(String key, List<IssueSubTypeResource> subTypesItem) {
    if (this.subTypes == null) {
      this.subTypes = new HashMap<>();
    }
    this.subTypes.put(key, subTypesItem);
    return this;
  }

   /**
   * Get subTypes
   * @return subTypes
  **/
  @ApiModelProperty(value = "")
  public Map<String, List<IssueSubTypeResource>> getSubTypes() {
    return subTypes;
  }

  public void setSubTypes(Map<String, List<IssueSubTypeResource>> subTypes) {
    this.subTypes = subTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectConfiguration projectConfiguration = (ProjectConfiguration) o;
    return Objects.equals(this.analyzerConfiguration, projectConfiguration.analyzerConfiguration) &&
        Objects.equals(this.emailConfiguration, projectConfiguration.emailConfiguration) &&
        Objects.equals(this.entryType, projectConfiguration.entryType) &&
        Objects.equals(this.externalSystem, projectConfiguration.externalSystem) &&
        Objects.equals(this.interruptedJob, projectConfiguration.interruptedJob) &&
        Objects.equals(this.keepLogs, projectConfiguration.keepLogs) &&
        Objects.equals(this.keepScreenshots, projectConfiguration.keepScreenshots) &&
        Objects.equals(this.projectSpecific, projectConfiguration.projectSpecific) &&
        Objects.equals(this.statisticCalculationStrategy, projectConfiguration.statisticCalculationStrategy) &&
        Objects.equals(this.subTypes, projectConfiguration.subTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyzerConfiguration, emailConfiguration, entryType, externalSystem, interruptedJob, keepLogs, keepScreenshots, projectSpecific, statisticCalculationStrategy, subTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectConfiguration {\n");

    sb.append("    analyzerConfiguration: ").append(toIndentedString(analyzerConfiguration)).append("\n");
    sb.append("    emailConfiguration: ").append(toIndentedString(emailConfiguration)).append("\n");
    sb.append("    entryType: ").append(toIndentedString(entryType)).append("\n");
    sb.append("    externalSystem: ").append(toIndentedString(externalSystem)).append("\n");
    sb.append("    interruptedJob: ").append(toIndentedString(interruptedJob)).append("\n");
    sb.append("    keepLogs: ").append(toIndentedString(keepLogs)).append("\n");
    sb.append("    keepScreenshots: ").append(toIndentedString(keepScreenshots)).append("\n");
    sb.append("    projectSpecific: ").append(toIndentedString(projectSpecific)).append("\n");
    sb.append("    statisticCalculationStrategy: ").append(toIndentedString(statisticCalculationStrategy)).append("\n");
    sb.append("    subTypes: ").append(toIndentedString(subTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

